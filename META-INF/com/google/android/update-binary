#!/sbin/sh
TMPDIR=/dev/tmp
MOUNTPATH=/dev/magisk_img

# Default permissions
umask 022

# Initial cleanup
rm -rf "$TMPDIR" 2>/dev/null
mkdir -p "$TMPDIR"

# echo before loading util_functions
ui_print() { echo "$1"; }

imageless_magisk() {
  [ "$MAGISK_VER_CODE" -gt 20400 ]
  return $?
}

require_new_magisk() {
  ui_print "*********************************"
  ui_print "* Please install Magisk v20.4+! *"
  ui_print "*********************************"
  exit 1
}

run_uninstaller() {
  ui_print " "
  ui_print " ùóóùóº ùòÜùóºùòÇ ùòÑùóÆùóªùòÅ ùòÅùóº ùòÇùóªùó∂ùóªùòÄùòÅùóÆùóπùóπ ùóòùóªùó≤ùóøùó¥ùó∂ùòáùó≤ùóø ùó≥ùóºùóø ùó•ùó≤ùó±ùó∫ùó∂ ùü≥ùóî? "
  ui_print " "
  ui_print " ùüè. ùêòùêûùê¨, ùêà ùê∞ùêöùêßùê≠ ùê≠ùê® ùêîùêßùê¢ùêßùê¨ùê≠ùêöùê•ùê• ùê≠ùê°ùê¢ùê¨ ùêåùê®ùêùùêÆùê•ùêû "
  ui_print " ùüê. ùêçùê®, ùêèùê´ùê®ùêúùêûùêûùêù ùê¶ùêû ùê≠ùê® ùêàùêßùê¨ùê≠ùêöùê•ùê•ùêöùê≠ùê¢ùê®ùêß "
  ui_print " "
  ui_print " Choose ùüè or ùüê "
  RU=1
  while true; do
    ui_print " $RU "
    if "$VKSEL"; then
      RU="$((RU + 1))"
    else
      break
    fi
    if  [ "$RU" -gt 2 ]; then
      RU=1
    fi
  done
  ui_print " Selected: $RU "
  ui_print " "
  sleep 0.5
  case "$RU" in
    1) RU1=" "; rm -rf /data/adb/modules/energizerforpine ; rm -rf /data/media/0/Energizer ; rm -rf /data/local.prop ;
    cd/
    imageless_magisk || unmount_magisk_img
    "$BOOTMODE" || recovery_cleanup
    rm -rf "$TMPDIR" "$MOUNTPATH"
    ui_print "‚úÖ Module Uninstalled! Reboot Your Device Now!"
    exit 0 ;;
    2) RU1=" "; rm -rf /data/media/0/Energizer ; rm -rf /data/local.prop ; ui_print "‚ùå Proceeding to Installation..." ; ui_print " " ; sleep 1 ; continue ;;
  esac
}

unzipping_files() {
  ui_print "- Unzipping Files, Please Wait... "
  sleep 5
}

##########################################################################################
# Environment
##########################################################################################
PINE="$(getprop ro.product.vendor.device)"
OUTFD="$2"
ZIPFILE="$3"

mount /data 2>/dev/null

# Detect Redmi 7A Devices
if [ "$PINE" == "pine" ]; then
  continue
else
  ui_print "- This is for Xiaomi Redmi 7A only!"
  abort
fi

# Load utility functions
[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ "$MAGISK_VER_CODE" -lt 20400 ] && require_new_magisk

# Preperation for flashable zips
setup_flashable

# Mount partitions
mount_partitions

# Detect version and architecture
api_level_arch_detect

# Setup busybox and binaries
"$BOOTMODE" && boot_actions || recovery_actions

##########################################################################################
# Preparation
##########################################################################################
# Extract common files
unzip -oj "$ZIPFILE" module.prop install.sh uninstall.sh 'common/*' -d "$TMPDIR" >&2
[ ! -f "$TMPDIR"/install.sh ] && abort "! Unable to extract zip file!"

# Extract addon files
unzip -o "$ZIPFILE" 'addon/*' -d "$TMPDIR" >&2

# Load install script
. "$TMPDIR"/install.sh

# Module Uninstaller
if [ -f /data/adb/modules/energizerforpine/module.prop ]; then
  . "$TMPDIR"/addon/Volume-Key-Selector/uninstall.sh
  run_uninstaller
else
  continue
fi

if imageless_magisk; then
  "$BOOTMODE" && MODDIRNAME=modules_update || MODDIRNAME=modules
  MODULEROOT="$NVBASE"/"$MODDIRNAME"
else
  "$BOOTMODE" && IMGNAME=magisk_merge.img || IMGNAME=magisk.img
  IMG="$NVBASE"/"$IMGNAME"
  request_zip_size_check "$ZIPFILE"
  mount_magisk_img
  MODULEROOT="$MOUNTPATH"
fi

MODID=`grep_prop id "$TMPDIR"/module.prop`
MODPATH="$MODULEROOT"/"$MODID"

unzipping_files
print_modname

##########################################################################################
# Install
##########################################################################################
# Create mod paths
rm -rf "$MODPATH" 2>/dev/null
mkdir -p "$MODPATH"

on_install

# Auto Mount
if imageless_magisk; then
  "$SKIPMOUNT" && touch "$MODPATH"/skip_mount
else
  "$SKIPMOUNT" || touch "$MODPATH"/auto_mount
fi

# prop files
"$PROPFILE" && cp -af "$TMPDIR"/system.prop "$MODPATH"/system.prop

# Module info
cp -af "$TMPDIR"/module.prop "$MODPATH"/module.prop

if "$BOOTMODE"; then
  # Update info for Magisk Manager
  if imageless_magisk; then
    mktouch "$NVBASE"/modules/"$MODID"/update
    cp -af "$TMPDIR"/module.prop "$NVBASE"/modules/"$MODID"/module.prop
  else
    mktouch /sbin/.magisk/img/"$MODID"/update
    cp -af "$TMPDIR"/module.prop /sbin/.magisk/img/"$MODID"/module.prop
  fi
fi

# post-fs-data mode scripts
"$POSTFSDATA" && cp -af "$TMPDIR"/post-fs-data.sh "$MODPATH"/post-fs-data.sh

# service mode scripts
"$LATESTARTSERVICE" && cp -af "$TMPDIR"/service.sh "$MODPATH"/service.sh

# Handle replace folders
for TARGET in $REPLACE; do
  ui_print "- Replace target: "$TARGET""
  mktouch "$MODPATH""$TARGET"/.replace
done

# Setting Permissions
ui_print "- Setting permissions"
set_permissions
ui_print "Done"

# Finale
finale
sleep 5

# Remove stuffs that don't belong to modules
rm -rf \
"$MODPATH"/.github "$MODPATH"/LICENSE "$MODPATH"/README.md "$MODPATH"/.gitattributes* 2>/dev/null

##########################################################################################
# Finalizing
##########################################################################################
cd /
imageless_magisk || unmount_magisk_img
"$BOOTMODE" || recovery_cleanup
rm -rf "$TMPDIR" $MOUNTPATH

# Print Reboot Your Device Now
ui_print "-  Ä·¥á ô·¥è·¥è·¥õ Y·¥è·¥ú Ä ·¥Ö·¥á·¥†…™·¥Ñ·¥á …¥·¥è·¥°! "
ui_print " "
exit 0

#=========================================================
# End of update-binary
# Modified by @preparetodietm
#=========================================================
